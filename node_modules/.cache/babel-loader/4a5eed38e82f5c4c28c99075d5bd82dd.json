{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useSearchParams } from \"react-router-dom\";\nconst apiKey = \"\"; //\"006508312dmsh4794537a4c9c0a0p1f3d72jsnf721339f853c\";\n\nexport const Properties = () => {\n  _s();\n\n  const [searchParams] = useSearchParams();\n  const rentFrequency = searchParams.get(\"rentFrequency\") || \"yearly\";\n  const minPrice = searchParams.get(\"minPrice\") || \"0\";\n  const maxPrice = searchParams.get(\"maxPrice\") || \"1000000\";\n  const roomsMin = searchParams.get(\"roomsMin\") || \"0\";\n  const bathsMin = searchParams.get(\"bathsMin\") || \"0\";\n  const sort = searchParams.get(\"sort\") || \"price-desc\";\n  const areaMax = searchParams.get(\"areaMax\") || \"35000\";\n  const categoryExternalID = searchParams.get(\"categoryExternalID\") || \"4\";\n  const furnishingStatus = searchParams.get(\"furnishingStatus\") || \"unfurnished\";\n  const options = {\n    method: \"GET\",\n    url: \"https://bayut.p.rapidapi.com/properties/list\",\n    params: {\n      locationExternalIDs: \"5002,6020\",\n      page: \"0\",\n      lang: \"en\",\n      sort: `${sort}`,\n      categoryExternalID: `${categoryExternalID}`,\n      rentFrequency: `${rentFrequency}`,\n      minPrice: `${minPrice}`,\n      maxPrice: `${maxPrice}`,\n      areaMax: `${areaMax}`,\n      roomsMin: `${roomsMin}`,\n      bathsMin: `${bathsMin}`,\n      furnishingStatus: `${furnishingStatus}`\n    },\n    headers: {\n      \"X-RapidAPI-Key\": apiKey,\n      \"X-RapidAPI-Host\": \"bayut.p.rapidapi.com\"\n    }\n  };\n  return options;\n};\n\n_s(Properties, \"HWxNQEGJGSlsPJ3ubBB3081mtng=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = Properties;\nexport const rentOptions = {\n  method: \"GET\",\n  url: \"https://bayut.p.rapidapi.com/properties/list\",\n  params: {\n    locationExternalIDs: \"5002,6020\",\n    purpose: \"for-rent\",\n    page: \"0\",\n    lang: \"en\",\n    sort: \"city-level-score\",\n    categoryExternalID: \"4\",\n    roomsMax: \"\",\n    rentFrequency: \"\",\n    minPrice: \"\",\n    maxPrice: \"\",\n    areaMax: \"\",\n    roomsMin: \"\",\n    bathsMin: \"\",\n    furnishingStatus: \"\"\n  },\n  headers: {\n    \"X-RapidAPI-Key\": apiKey,\n    \"X-RapidAPI-Host\": \"bayut.p.rapidapi.com\"\n  }\n};\nexport const saleOptions = {\n  method: \"GET\",\n  url: \"https://bayut.p.rapidapi.com/properties/list\",\n  params: {\n    locationExternalIDs: \"5002,6020\",\n    purpose: \"for-sale\",\n    page: \"0\",\n    lang: \"en\",\n    sort: \"city-level-score\",\n    categoryExternalID: \"4\",\n    roomsMax: \"\",\n    rentFrequency: \"\",\n    minPrice: \"\",\n    maxPrice: \"\",\n    areaMax: \"\",\n    roomsMin: \"\",\n    bathsMin: \"\",\n    furnishingStatus: \"\"\n  },\n  headers: {\n    \"X-RapidAPI-Key\": apiKey,\n    \"X-RapidAPI-Host\": \"bayut.p.rapidapi.com\"\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Properties\");","map":{"version":3,"names":["useSearchParams","apiKey","Properties","searchParams","rentFrequency","get","minPrice","maxPrice","roomsMin","bathsMin","sort","areaMax","categoryExternalID","furnishingStatus","options","method","url","params","locationExternalIDs","page","lang","headers","rentOptions","purpose","roomsMax","saleOptions"],"sources":["/Users/austinmerilos/Projects/Homestead/homestead/src/utiles/fetchApi.tsx"],"sourcesContent":["import { useSearchParams } from \"react-router-dom\";\n\nconst apiKey = \"\"; //\"006508312dmsh4794537a4c9c0a0p1f3d72jsnf721339f853c\";\n\nexport const Properties = () => {\n  const [searchParams] = useSearchParams();\n\n  const rentFrequency = searchParams.get(\"rentFrequency\") || \"yearly\";\n  const minPrice = searchParams.get(\"minPrice\") || \"0\";\n  const maxPrice = searchParams.get(\"maxPrice\") || \"1000000\";\n  const roomsMin = searchParams.get(\"roomsMin\") || \"0\";\n  const bathsMin = searchParams.get(\"bathsMin\") || \"0\";\n  const sort = searchParams.get(\"sort\") || \"price-desc\";\n  const areaMax = searchParams.get(\"areaMax\") || \"35000\";\n\n  const categoryExternalID = searchParams.get(\"categoryExternalID\") || \"4\";\n  const furnishingStatus =\n    searchParams.get(\"furnishingStatus\") || \"unfurnished\";\n\n  const options = {\n    method: \"GET\",\n    url: \"https://bayut.p.rapidapi.com/properties/list\",\n    params: {\n      locationExternalIDs: \"5002,6020\",\n      page: \"0\",\n      lang: \"en\",\n      sort: `${sort}`,\n      categoryExternalID: `${categoryExternalID}`,\n      rentFrequency: `${rentFrequency}`,\n      minPrice: `${minPrice}`,\n      maxPrice: `${maxPrice}`,\n      areaMax: `${areaMax}`,\n      roomsMin: `${roomsMin}`,\n      bathsMin: `${bathsMin}`,\n      furnishingStatus: `${furnishingStatus}`,\n    },\n    headers: {\n      \"X-RapidAPI-Key\": apiKey,\n      \"X-RapidAPI-Host\": \"bayut.p.rapidapi.com\",\n    },\n  };\n  return options;\n};\n\nexport const rentOptions = {\n  method: \"GET\",\n  url: \"https://bayut.p.rapidapi.com/properties/list\",\n  params: {\n    locationExternalIDs: \"5002,6020\",\n    purpose: \"for-rent\",\n    page: \"0\",\n    lang: \"en\",\n    sort: \"city-level-score\",\n    categoryExternalID: \"4\",\n    roomsMax: \"\",\n    rentFrequency: \"\",\n    minPrice: \"\",\n    maxPrice: \"\",\n    areaMax: \"\",\n    roomsMin: \"\",\n    bathsMin: \"\",\n    furnishingStatus: \"\",\n  },\n  headers: {\n    \"X-RapidAPI-Key\": apiKey,\n    \"X-RapidAPI-Host\": \"bayut.p.rapidapi.com\",\n  },\n};\n\nexport const saleOptions = {\n  method: \"GET\",\n  url: \"https://bayut.p.rapidapi.com/properties/list\",\n  params: {\n    locationExternalIDs: \"5002,6020\",\n    purpose: \"for-sale\",\n    page: \"0\",\n    lang: \"en\",\n    sort: \"city-level-score\",\n    categoryExternalID: \"4\",\n    roomsMax: \"\",\n    rentFrequency: \"\",\n    minPrice: \"\",\n    maxPrice: \"\",\n    areaMax: \"\",\n    roomsMin: \"\",\n    bathsMin: \"\",\n    furnishingStatus: \"\",\n  },\n  headers: {\n    \"X-RapidAPI-Key\": apiKey,\n    \"X-RapidAPI-Host\": \"bayut.p.rapidapi.com\",\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}