[{"/Users/austinmerilos/Projects/Homestead/src/index.tsx":"1","/Users/austinmerilos/Projects/Homestead/src/pages/Search/index.tsx":"2","/Users/austinmerilos/Projects/Homestead/src/pages/Home/index.tsx":"3","/Users/austinmerilos/Projects/Homestead/src/pages/PropertyDetails/index.tsx":"4","/Users/austinmerilos/Projects/Homestead/src/components/footer/index.tsx":"5","/Users/austinmerilos/Projects/Homestead/src/components/navBar/index.tsx":"6","/Users/austinmerilos/Projects/Homestead/src/pages/Search/styles.ts":"7","/Users/austinmerilos/Projects/Homestead/src/pages/PropertyDetails/styles.ts":"8","/Users/austinmerilos/Projects/Homestead/src/pages/Home/styles.ts":"9","/Users/austinmerilos/Projects/Homestead/src/pages/Home/sections.tsx":"10","/Users/austinmerilos/Projects/Homestead/src/pages/Home/bannerSections.tsx":"11","/Users/austinmerilos/Projects/Homestead/src/pages/Home/constants.tsx":"12","/Users/austinmerilos/Projects/Homestead/src/pages/PropertyDetails/carousel.tsx":"13","/Users/austinmerilos/Projects/Homestead/src/utiles/numberFormater.tsx":"14","/Users/austinmerilos/Projects/Homestead/src/components/footer/styles.ts":"15","/Users/austinmerilos/Projects/Homestead/src/utiles/fetchApi.tsx":"16","/Users/austinmerilos/Projects/Homestead/src/components/navBar/styles.ts":"17","/Users/austinmerilos/Projects/Homestead/src/assets/index.ts":"18","/Users/austinmerilos/Projects/Homestead/src/components/searchFilters/index.tsx":"19","/Users/austinmerilos/Projects/Homestead/src/components/searchFilters/styles.ts":"20","/Users/austinmerilos/Projects/Homestead/src/utiles/filterData.tsx":"21"},{"size":1111,"mtime":1675744776109,"results":"22","hashOfConfig":"23"},{"size":3756,"mtime":1675721718018,"results":"24","hashOfConfig":"23"},{"size":5547,"mtime":1675719779063,"results":"25","hashOfConfig":"23"},{"size":3960,"mtime":1675717182289,"results":"26","hashOfConfig":"23"},{"size":263,"mtime":1675627537161,"results":"27","hashOfConfig":"23"},{"size":2292,"mtime":1675656286390,"results":"28","hashOfConfig":"23"},{"size":1435,"mtime":1675721702500,"results":"29","hashOfConfig":"23"},{"size":3188,"mtime":1675815884226,"results":"30","hashOfConfig":"23"},{"size":3734,"mtime":1675719788607,"results":"31","hashOfConfig":"23"},{"size":1441,"mtime":1675719769168,"results":"32","hashOfConfig":"23"},{"size":885,"mtime":1674683744383,"results":"33","hashOfConfig":"23"},{"size":1160,"mtime":1675620901612,"results":"34","hashOfConfig":"23"},{"size":1880,"mtime":1675384980419,"results":"35","hashOfConfig":"23"},{"size":280,"mtime":1675479597466,"results":"36","hashOfConfig":"23"},{"size":431,"mtime":1675712293448,"results":"37","hashOfConfig":"23"},{"size":373,"mtime":1675721564499,"results":"38","hashOfConfig":"23"},{"size":612,"mtime":1674518623512,"results":"39","hashOfConfig":"23"},{"size":305,"mtime":1674607687551,"results":"40","hashOfConfig":"23"},{"size":2691,"mtime":1675657414775,"results":"41","hashOfConfig":"23"},{"size":605,"mtime":1675712538400,"results":"42","hashOfConfig":"23"},{"size":5532,"mtime":1674606330275,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"twd4ab",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/austinmerilos/Projects/Homestead/src/index.tsx",[],[],"/Users/austinmerilos/Projects/Homestead/src/pages/Search/index.tsx",[],[],"/Users/austinmerilos/Projects/Homestead/src/pages/Home/index.tsx",["109"],[],"import axios from \"axios\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport images from \"../../assets\";\nimport { bayutUrl, fetchApi } from \"../../utiles/fetchApi\";\nimport BannerSections from \"./bannerSections\";\nimport constants from \"./constants\";\nimport PropertySection from \"./sections\";\nimport { HeaderContainer, PropertySectionInnerContainer } from \"./styles\";\n\nexport default function Home() {\n  const [salePropertyArray, setSalePropertyArray] = useState([\n    {\n      title: \"default 1\",\n      baths: \"NA\",\n      rooms: \"NA\",\n      price: \"NA\",\n      area: \"NA\",\n      image: \"NA\",\n      externalID: \"\",\n    },\n    {\n      title: \"default 2\",\n      baths: \"NA\",\n      rooms: \"NA\",\n      price: \"NA\",\n      area: \"NA\",\n      image: \"NA\",\n      externalID: \"\",\n    },\n    {\n      title: \"default 3\",\n      baths: \"NA\",\n      rooms: \"NA\",\n      price: \"NA\",\n      area: \"NA\",\n      image: \"NA\",\n      externalID: \"\",\n    },\n  ]);\n  const [rentPropertyArray, setRentPropertyArray] = useState([\n    {\n      title: \"default 1\",\n      baths: \"NA\",\n      rooms: \"NA\",\n      price: \"NA\",\n      area: \"NA\",\n      image: \"NA\",\n      externalID: \"\",\n    },\n    {\n      title: \"default 2\",\n      baths: \"NA\",\n      rooms: \"NA\",\n      price: \"NA\",\n      area: \"NA\",\n      image: \"NA\",\n      externalID: \"\",\n    },\n    {\n      title: \"default 3\",\n      baths: \"NA\",\n      rooms: \"NA\",\n      price: \"NA\",\n      area: \"NA\",\n      image: \"NA\",\n      externalID: \"\",\n    },\n  ]);\n\n  const getResults = useCallback(async () => {\n    const results = await fetchApi(\n      `${bayutUrl}/properties/list?locationExternalIDs=5002%2C6020&purpose=for-sale&hitsPerPage=3&page=0&lang=en`\n    );\n    const rentResults = await fetchApi(\n      `${bayutUrl}/properties/list?locationExternalIDs=5002%2C6020&purpose=for-rent&hitsPerPage=3&page=0&lang=en`\n    );\n    const searchData = results.hits;\n    const rentData = rentResults.hits;\n    setSalePropertyArray([\n      {\n        title: searchData[0].title,\n        image: searchData[0].coverPhoto.url,\n        baths: searchData[0].baths,\n        rooms: searchData[0].rooms,\n        price: searchData[0].price,\n        area: searchData[0].area,\n        externalID: searchData[0].externalID,\n      },\n      {\n        title: searchData[1].title,\n        image: searchData[1].coverPhoto.url,\n        baths: searchData[1].baths,\n        rooms: searchData[1].rooms,\n        price: searchData[1].price,\n        area: searchData[1].area,\n        externalID: searchData[1].externalID,\n      },\n      {\n        title: searchData[2].title,\n        image: searchData[2].coverPhoto.url,\n        baths: searchData[2].baths,\n        rooms: searchData[2].rooms,\n        price: searchData[2].price,\n        area: searchData[2].area,\n        externalID: searchData[2].externalID,\n      },\n    ]);\n    setRentPropertyArray([\n      {\n        title: rentData[0].title,\n        image: rentData[0].coverPhoto.url,\n        baths: rentData[0].baths,\n        rooms: rentData[0].rooms,\n        price: rentData[0].price,\n        area: rentData[0].area,\n        externalID: rentData[0].externalID,\n      },\n      {\n        title: rentData[1].title,\n        image: rentData[1].coverPhoto.url,\n        baths: rentData[1].baths,\n        rooms: rentData[1].rooms,\n        price: rentData[1].price,\n        area: rentData[1].area,\n        externalID: rentData[1].externalID,\n      },\n      {\n        title: rentData[2].title,\n        image: rentData[2].coverPhoto.url,\n        baths: rentData[2].baths,\n        rooms: rentData[2].rooms,\n        price: rentData[2].price,\n        area: rentData[2].area,\n        externalID: rentData[2].externalID,\n      },\n    ]);\n  }, []);\n\n  useEffect(() => {\n    getResults();\n  }, [getResults]);\n\n  let urlString = \"/search/property/\";\n  return (\n    <>\n      <HeaderContainer />\n      <BannerSections\n        image={images.rentBanner}\n        description={constants.rentProperty.description}\n        title={constants.rentProperty.title}\n        button={constants.rentProperty.button}\n        link={constants.rentProperty.link}\n      ></BannerSections>\n      <PropertySectionInnerContainer>\n        {rentPropertyArray.map((array) => {\n          if (array.externalID === \"\") {\n            urlString = \"\";\n          }\n          return (\n            <PropertySection\n              title={array.title}\n              baths={array.baths}\n              rooms={array.rooms}\n              price={Number(array.price)}\n              area={Number(array.area)}\n              image={array.image}\n              link={`${urlString}${array.externalID}`}\n            ></PropertySection>\n          );\n        })}\n      </PropertySectionInnerContainer>\n\n      <BannerSections\n        image={images.buyBanner}\n        description={constants.buyProperty.description}\n        title={constants.buyProperty.title}\n        button={constants.buyProperty.button}\n        link={constants.buyProperty.link}\n      ></BannerSections>\n\n      <PropertySectionInnerContainer>\n        {salePropertyArray.map((array) => {\n          if (array.externalID === \"\") {\n            urlString = \"\";\n          }\n          return (\n            <PropertySection\n              title={array.title}\n              baths={array.baths}\n              rooms={array.rooms}\n              price={Number(array.price)}\n              area={Number(array.area)}\n              image={array.image}\n              link={`${urlString}${array.externalID}`}\n            ></PropertySection>\n          );\n        })}\n      </PropertySectionInnerContainer>\n    </>\n  );\n}\n","/Users/austinmerilos/Projects/Homestead/src/pages/PropertyDetails/index.tsx",["110"],[],"import { OtherHouses } from \"@mui/icons-material\";\nimport React, { useMemo } from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { bayutUrl, fetchApi } from \"../../utiles/fetchApi\";\nimport { areaFormat, numberFormat } from \"../../utiles/numberFormater\";\nimport Carousel from \"./carousel\";\nimport {\n  AmenitiesContainer,\n  Amenitiesitem,\n  AmenitiesTitle,\n  Area,\n  Bath,\n  Bed,\n  Container,\n  Description,\n  IconContainer,\n  IconText,\n  Loader,\n  TextContainer,\n  TextHeaders,\n  Title,\n  Verified,\n} from \"./styles\";\n\ntype PropertyType = {\n  id: string;\n};\n\nexport default function PropertyDetails() {\n  const { id } = useParams<PropertyType>();\n  const [loading, setLoading] = useState(true);\n\n  const [title, setTitle] = useState();\n  const [baths, setBaths] = useState();\n  const [area, setArea] = useState();\n  const [rooms, setRooms] = useState();\n  const [price, setPrice] = useState();\n  const [description, setDescription] = useState();\n  const [rentFrequency, setRentFrequency] = useState();\n  const [photos, setPhotos] = useState([{ title: \"\", url: \"\" }]);\n  const [amenities, setAmenities] = useState([]);\n  const [verification, setVerification] = useState();\n  const [purpose, setPurpose] = useState();\n  const [furnishingStatus, setFurnishingStatus] = useState();\n  const formater = useMemo(() => numberFormat(Number(price)), [price]);\n  const areaFormater = useMemo(() => areaFormat(Number(area)), [area]);\n\n  const getResults = useCallback(async () => {\n    const results = await fetchApi(\n      `${bayutUrl}/properties/detail?externalID=${id}`\n    );\n    const searchData = results;\n    const amenitiesText = searchData.amenities.map(\n      (amenity: { text: string }) => amenity.text\n    );\n\n    setAmenities(amenitiesText);\n    setTitle(searchData.title);\n    setRooms(searchData.rooms);\n    setPrice(searchData.price);\n    setBaths(searchData.baths);\n    setArea(searchData.area);\n    setPurpose(searchData.purpose);\n    setFurnishingStatus(searchData.furnishingStatus);\n    setRentFrequency(searchData.rentFrequency);\n    setDescription(searchData.description);\n    setPhotos(searchData.photos);\n    setVerification(searchData.verification.status);\n    setLoading(false);\n  }, [id]);\n\n  useEffect(() => {\n    getResults();\n  }, [getResults]);\n\n  let propertyType = \"\";\n  if (purpose === \"for-rent\") {\n    propertyType = \" Renting\";\n  }\n  if (purpose === \"for-sale\") {\n    propertyType = \"Selling\";\n  }\n\n  return (\n    <Container>\n      {loading === true ? (\n        <Loader />\n      ) : (\n        <>\n          <Title>{title} </Title>\n          <Carousel\n            photos={photos.map((property) => ({\n              title: property.title,\n              url: property.url,\n            }))}\n          ></Carousel>\n\n          <IconContainer>\n            {verification === \"verified\" && <Verified />}\n            <Bed />\n            <IconText>{rooms}</IconText>\n            <Bath />\n            <IconText>{baths}</IconText>\n            <Area />\n            <IconText>{areaFormater} sqft</IconText>\n          </IconContainer>\n          <IconContainer>\n            <TextContainer>\n              <TextHeaders>Price: {formater} </TextHeaders>\n              {rentFrequency && <TextHeaders>{rentFrequency}</TextHeaders>}\n              <TextHeaders>Property Type: {propertyType}</TextHeaders>\n              <TextHeaders>Furnished Status: {furnishingStatus}</TextHeaders>\n            </TextContainer>\n          </IconContainer>\n\n          <Description>{description}</Description>\n          {amenities.length > 0 && (\n            <>\n              <AmenitiesTitle>Amenities:</AmenitiesTitle>\n              <AmenitiesContainer>\n                {amenities.map((amenity, index) => (\n                  <Amenitiesitem key={index}>{amenity}</Amenitiesitem>\n                ))}\n              </AmenitiesContainer>\n            </>\n          )}\n        </>\n      )}\n    </Container>\n  );\n}\n","/Users/austinmerilos/Projects/Homestead/src/components/footer/index.tsx",[],[],"/Users/austinmerilos/Projects/Homestead/src/components/navBar/index.tsx",[],[],"/Users/austinmerilos/Projects/Homestead/src/pages/Search/styles.ts",[],[],"/Users/austinmerilos/Projects/Homestead/src/pages/PropertyDetails/styles.ts",[],[],"/Users/austinmerilos/Projects/Homestead/src/pages/Home/styles.ts",[],[],"/Users/austinmerilos/Projects/Homestead/src/pages/Home/sections.tsx",[],[],"/Users/austinmerilos/Projects/Homestead/src/pages/Home/bannerSections.tsx",[],[],"/Users/austinmerilos/Projects/Homestead/src/pages/Home/constants.tsx",[],[],"/Users/austinmerilos/Projects/Homestead/src/pages/PropertyDetails/carousel.tsx",[],[],"/Users/austinmerilos/Projects/Homestead/src/utiles/numberFormater.tsx",[],[],"/Users/austinmerilos/Projects/Homestead/src/components/footer/styles.ts",[],[],"/Users/austinmerilos/Projects/Homestead/src/utiles/fetchApi.tsx",[],[],"/Users/austinmerilos/Projects/Homestead/src/components/navBar/styles.ts",[],[],"/Users/austinmerilos/Projects/Homestead/src/assets/index.ts",[],[],"/Users/austinmerilos/Projects/Homestead/src/components/searchFilters/index.tsx",[],[],"/Users/austinmerilos/Projects/Homestead/src/components/searchFilters/styles.ts",[],[],"/Users/austinmerilos/Projects/Homestead/src/utiles/filterData.tsx",[],[],{"ruleId":"111","severity":1,"message":"112","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"115","line":1,"column":10,"nodeType":"113","messageId":"114","endLine":1,"endColumn":21},"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'OtherHouses' is defined but never used."]